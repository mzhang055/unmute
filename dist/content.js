(()=>{"use strict";class e{constructor(){if(this.recognition=null,this.isRecording=!1,e.instance)return e.instance;e.instance=this,this.init()}init(){this.setupMessageListener(),this.setupKeyboardListener(),this.setupSpeechRecognition(),this.log("Content script loaded")}setupMessageListener(){chrome.runtime.onMessage.addListener((e,t,n)=>(this.handleMessage(e,t,n),!0))}async handleMessage(e,t,n){try{if(this.log("Received message:",e),"buttonClicked"!==e.action)throw new Error(`Unknown action: ${e.action}`);await this.handleButtonClick(),n({status:"success",message:"Button click handled"})}catch(e){console.error("Content script error:",e),n({status:"error",message:e instanceof Error?e.message:"Unknown error"})}}async handleButtonClick(){this.log("Button clicked in popup"),this.addVisualIndicator()}addVisualIndicator(){const e=document.getElementById("unmute-indicator");e&&e.remove();const t=document.createElement("div");t.id="unmute-indicator",t.textContent="Unmute Extension Active!",t.style.cssText="\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: #1a73e8;\n      color: white;\n      padding: 12px 16px;\n      border-radius: 6px;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      font-weight: 500;\n      z-index: 10000;\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n      transition: opacity 0.3s ease;\n    ",document.body.appendChild(t),setTimeout(()=>{t.style.opacity="0",setTimeout(()=>t.remove(),300)},3e3)}setupKeyboardListener(){document.addEventListener("keydown",e=>{const t=e.metaKey||e.ctrlKey,n=e.shiftKey,o="Space"===e.code;t&&n&&o&&(e.preventDefault(),this.toggleSpeechRecording(),this.printTracking())})}async printTracking(){this.log("tracking");try{const e=(await chrome.storage.local.get(["trackingStats"])).trackingStats||{totalCount:0,lastPress:"Never"},t=(new Date).toLocaleTimeString(),n={totalCount:e.totalCount+1,lastPress:t};await chrome.storage.local.set({trackingStats:n});try{await chrome.runtime.sendMessage({action:"trackingUpdate"})}catch(e){}}catch(e){console.error("Error updating tracking stats:",e)}}setupSpeechRecognition(){const e=window.SpeechRecognition||window.webkitSpeechRecognition;e?(this.recognition=new e,this.recognition&&(this.recognition.continuous=!1,this.recognition.interimResults=!0,this.recognition.lang="en-US",this.recognition.onstart=()=>{this.log("Speech recognition started"),this.isRecording=!0,this.showRecordingIndicator()},this.recognition.onresult=e=>{let t="",n=!1;for(let o=e.resultIndex;o<e.results.length;o++){const i=e.results[o];t+=i[0].transcript,i.isFinal&&(n=!0)}this.log("Speech recognition result:",{transcript:t,isFinal:n}),this.updateTranscriptDisplay(t,n),n&&this.handleFinalTranscript(t)},this.recognition.onerror=e=>{this.log("Speech recognition error:",e.error),this.isRecording=!1,this.showErrorIndicator(`Speech recognition error: ${e.error}`)},this.recognition.onend=()=>{this.log("Speech recognition ended"),this.isRecording=!1,this.hideRecordingIndicator()},this.log("Speech recognition setup complete"))):this.log("Speech recognition not supported in this browser")}toggleSpeechRecording(){if(this.recognition)if(this.isRecording)this.recognition.stop(),this.log("Stopping speech recognition");else try{this.recognition.start(),this.log("Starting speech recognition")}catch(e){this.log("Error starting speech recognition:",e),this.showErrorIndicator("Could not start speech recognition")}else this.showErrorIndicator("Speech recognition not available")}showRecordingIndicator(){const e=document.getElementById("unmute-recording-indicator");e&&e.remove();const t=document.createElement("div");t.id="unmute-recording-indicator",t.innerHTML='\n      <div style="display: flex; align-items: center; gap: 12px;">\n        <div class="recording-dot"></div>\n        <div class="recording-text">\n          <div style="font-weight: bold; font-size: 16px;">üé§ Recording...</div>\n          <div id="transcript-display" style="font-size: 14px; opacity: 0.8; margin-top: 4px;"></div>\n        </div>\n      </div>\n    ',t.style.cssText="\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: rgba(0, 0, 0, 0.9);\n      color: white;\n      padding: 16px 20px;\n      border-radius: 12px;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      z-index: 10000;\n      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n      border: 2px solid #ff4444;\n      backdrop-filter: blur(10px);\n      max-width: 300px;\n      word-wrap: break-word;\n    ";const n=document.createElement("style");n.textContent="\n      .recording-dot {\n        width: 12px;\n        height: 12px;\n        background: #ff4444;\n        border-radius: 50%;\n        animation: recording-pulse 1s infinite;\n      }\n      @keyframes recording-pulse {\n        0% { opacity: 1; transform: scale(1); }\n        50% { opacity: 0.5; transform: scale(1.2); }\n        100% { opacity: 1; transform: scale(1); }\n      }\n    ",document.head.appendChild(n),document.body.appendChild(t)}updateTranscriptDisplay(e,t){const n=document.getElementById("transcript-display");n&&(n.textContent=e||"Listening...",n.style.opacity=t?"1":"0.7",n.style.fontStyle=t?"normal":"italic")}async handleFinalTranscript(e){this.log("=== CONTENT SCRIPT: FINAL TRANSCRIPT PROCESSING ==="),this.log("Original transcript:",e);const t=e;this.log("Modified transcript:",t),this.log("Transcript length:",t.length);try{this.log("Sending message to background script...");const e=await chrome.runtime.sendMessage({action:"generateTTSAndSaveLocally",text:t});this.log("Response from background script:",e),e?.audioSaved?this.log("SUCCESS: Audio file saved locally"):this.log("ERROR: Audio generation or save failed")}catch(e){this.log("ERROR: Exception in handleFinalTranscript"),console.error("Error processing transcript:",e),this.log("Error name:",e.name),this.log("Error message:",e.message),this.log("Error stack:",e.stack)}setTimeout(()=>{this.showTranscriptResult(e)},500),this.log("=== CONTENT SCRIPT: TRANSCRIPT PROCESSING COMPLETED ===")}showTranscriptResult(e){const t=document.getElementById("unmute-recording-indicator");t&&t.remove();const n=document.createElement("div");n.id="unmute-transcript-result",n.innerHTML=`\n      <div style="margin-bottom: 8px; font-weight: bold;">‚úÖ Speech Recognized:</div>\n      <div style="font-size: 14px; background: rgba(255,255,255,0.1); padding: 8px; border-radius: 6px; word-wrap: break-word;">\n        "${e}"\n      </div>\n    `,n.style.cssText="\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: rgba(0, 100, 0, 0.9);\n      color: white;\n      padding: 16px 20px;\n      border-radius: 12px;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      z-index: 10000;\n      box-shadow: 0 4px 20px rgba(0, 100, 0, 0.3);\n      border: 2px solid #00ff00;\n      backdrop-filter: blur(10px);\n      max-width: 300px;\n      word-wrap: break-word;\n    ",document.body.appendChild(n),setTimeout(()=>{n.style.opacity="0",n.style.transform="translateX(100%)",n.style.transition="all 0.3s ease",setTimeout(()=>n.remove(),300)},4e3)}showErrorIndicator(e){const t=document.getElementById("unmute-recording-indicator");t&&t.remove();const n=document.createElement("div");n.innerHTML=`\n      <div style="display: flex; align-items: center; gap: 8px;">\n        <span>‚ùå</span>\n        <span>${e}</span>\n      </div>\n    `,n.style.cssText="\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: rgba(200, 0, 0, 0.9);\n      color: white;\n      padding: 12px 16px;\n      border-radius: 8px;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      z-index: 10000;\n      box-shadow: 0 4px 20px rgba(200, 0, 0, 0.3);\n      backdrop-filter: blur(10px);\n    ",document.body.appendChild(n),setTimeout(()=>{n.style.opacity="0",n.style.transition="opacity 0.3s ease",setTimeout(()=>n.remove(),300)},3e3)}hideRecordingIndicator(){const e=document.getElementById("unmute-recording-indicator");e&&(e.style.opacity="0",e.style.transition="opacity 0.3s ease",setTimeout(()=>e.remove(),300))}playAudio(e){try{const t=new Audio(e);t.volume=.8,t.onload=()=>{this.log("Audio loaded successfully")},t.onplay=()=>{this.log("Audio playback started")},t.onended=()=>{this.log("Audio playback finished"),URL.revokeObjectURL(e)},t.onerror=t=>{console.error("Audio playback error:",t),URL.revokeObjectURL(e)},t.play().catch(t=>{console.error("Failed to play audio:",t),URL.revokeObjectURL(e)})}catch(e){console.error("Error creating audio element:",e)}}base64ToBlob(e,t){const n=atob(e),o=new Array(n.length);for(let e=0;e<n.length;e++)o[e]=n.charCodeAt(e);const i=new Uint8Array(o);return new Blob([i],{type:t})}log(e,...t){console.log(`[Unmute Content Script] ${e}`,...t)}}new e})();